{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","components/Message.js","services/people.js","App.js","index.js"],"names":["PersonForm","newName","newNumber","addPerson","nameChangeHandler","numberChangeHandler","value","onChange","onClick","type","Persons","persons","keyword","del","filterApplied","filter","person","name","toLowerCase","includes","map","key","number","window","confirm","id","noFilter","length","Filter","searchWord","searchChangeHandler","Message","message","messageType","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setSearchWord","setPersons","setNewName","setNewNumber","setMessage","setMessageType","useEffect","peopleService","initialPeople","event","target","preventDefault","nameObject","find","n","p","setTimeout","catch","concat","ReactDOM","render","document","getElementById"],"mappings":"mNAoCeA,EAjBI,SAAC,GAA6E,IAA5EC,EAA2E,EAA3EA,QAASC,EAAkE,EAAlEA,UAAWC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,kBAAmBC,EAAyB,EAAzBA,oBAEnE,OACI,6BACA,8BACI,sCACM,2BAAOC,MAAOL,EAASM,SAAUH,KAEvC,wCAAa,2BAAOE,MAAOJ,EAAWK,SAAUF,KAChD,6BACA,4BAAQG,QAASL,EAAWM,KAAK,UAAjC,WCeGC,EAzCC,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,IAI1BC,EAFgBH,EAAQI,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAKC,cAAcC,SAASP,EAAQM,kBAEtDE,KAAI,SAAAJ,GAAM,OAC1C,yBAAKK,IAAKL,EAAOC,MACZD,EAAOC,KADZ,IACmBD,EAAOM,OACtB,4BAAQd,QAAS,WACVe,OAAOC,QAAP,iBAAyBR,EAAOC,KAAhC,OACCJ,EAAIG,EAAOS,MAFnB,cAWFC,EAAWf,EAAQS,KAAI,SAAAJ,GAAM,OAC/B,yBAAKK,IAAKL,EAAOC,MACZD,EAAOC,KADZ,IACmBD,EAAOM,OACtB,4BAAQd,QAAS,WACVe,OAAOC,QAAP,iBAAyBR,EAAOC,KAAhC,OACCJ,EAAIG,EAAOS,MAFnB,cAYR,OAEI,6BACwB,IAAnBb,EAAQe,OAAeD,EAAWZ,ICzB9Bc,EAZF,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,oBACzB,OACA,6BACI,8BACI,kDACkB,2BAAOxB,MAAOuB,EAAYtB,SAAUuB,QCcnDC,EAnBC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAC1B,OAAgB,OAAZD,EACK,KAGa,UAAhBC,EAEI,yBAAKC,UAAU,SACdF,GAML,yBAAKE,UAAU,WACdF,I,gBChBHG,EAAU,oCAsBD,EApBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACf,EAAIgB,GAElB,OADgBL,IAAMO,IAAN,UAAaR,EAAb,YAAwBV,GAAMgB,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALM,SAAAf,GAEjB,OADgBW,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BV,IAC5Ba,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC+G9BK,EA5HH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACRjB,EADQ,KACIkB,EADJ,OAEgBD,mBAAS,IAFzB,mBAERnC,EAFQ,KAECqC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGR7C,EAHQ,KAGCgD,EAHD,OAIoBH,mBAAS,IAJ7B,mBAIR5C,EAJQ,KAIGgD,EAJH,OAKgBJ,mBAAS,MALzB,mBAKRd,EALQ,KAKCmB,EALD,OAMwBL,mBAAS,MANjC,mBAMRb,EANQ,KAMKmB,EANL,KAQhBC,qBAAU,WACRC,IAEGhB,MAAK,SAAAiB,GACJP,EAAWO,QAEd,IAyFH,OACE,6BACE,kBAAC,EAAD,CAASvB,QAASA,EAASC,YAAaA,IACxC,yCACA,kBAAC,EAAD,CAAQJ,WAAYA,EAAYC,oBAnFR,SAAC0B,GAC3BT,EAAcS,EAAMC,OAAOnD,MAAMY,kBAoF/B,gDACA,kBAAC,EAAD,CACEjB,QAASA,EACTC,UAAWA,EACXC,UArFY,SAACqD,GACjBA,EAAME,iBAEN,IAAMC,EAAa,CACjB1C,KAAMhB,EACNqB,OAAQpB,GAKV,GAFYS,EAAQS,KAAI,SAAAJ,GAAM,OAAIA,EAAOC,QAEhCE,SAASlB,GAAU,CAC1B,IAAMgB,EAAON,EAAQiD,MAAK,SAAAC,GAAC,OAAIA,EAAE5C,OAAShB,KACtCsB,OAAOC,QAAP,UAAkBvB,EAAlB,+EACFqD,EAAqBrC,EAAKQ,GAAIkC,GAC3BrB,MAAK,SAAAC,GACJS,EAAWrC,EAAQS,KAAI,SAAA0C,GAAC,OAAIA,EAAErC,KAAOR,EAAKQ,GAAKc,EAAWuB,MAC1DX,EAAW,GAAD,OAAIlD,EAAJ,yCAEVgD,EAAW,IACXC,EAAa,IAEba,YAAW,WACTZ,EAAW,QACV,QAEJa,OAAM,WACLb,EAAW,kBAAD,OAAmBlD,EAAnB,8CACVmD,EAAe,SACfW,YAAW,WACTZ,EAAW,MACXC,EAAe,QACd,aAITE,EAAqBK,GAClBrB,MAAK,SAAAC,GACJS,EAAWrC,EAAQsD,OAAO1B,IAC1BY,EAAW,GAAD,OAAIlD,EAAJ,qCAEVgD,EAAW,IACXC,EAAa,IAEba,YAAW,WACTZ,EAAW,QACV,SAyCL/C,kBAlGoB,SAACoD,GACzBP,EAAWO,EAAMC,OAAOnD,QAkGpBD,oBA/FsB,SAACmD,GAC3BN,EAAaM,EAAMC,OAAOnD,UAgGxB,uCACA,kBAAC,EAAD,CAASK,QAASA,EAASC,QAASiB,EAAYhB,IAxCxC,SAACY,GACX,IAAIT,EAASL,EAAQiD,MAAK,SAAAE,GAAC,OAAIA,EAAErC,KAAMA,KACvC6B,EACkB7B,GACba,MAAK,SAAAC,GACJS,EAAWrC,EAAQI,QAAO,SAAA+C,GAAC,OAAIA,EAAErC,KAAOA,MACxC0B,EAAW,GAAD,OAAInC,EAAOC,KAAX,yCAEVgC,EAAW,IACXC,EAAa,IAEba,YAAW,WACTZ,EAAW,QACV,QAEJa,OAAM,WACLb,EAAW,kBAAD,OAAmBlD,EAAnB,8CACVmD,EAAe,SACfW,YAAW,WACTZ,EAAW,MACXC,EAAe,QACd,a,MCrGbc,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a03958c1.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n/*const Display = ({persons, keyword}) => {\r\n  if(keyword.length === 0) {\r\n    return (\r\n      persons.map(person => <p key={person.name}>{person.name} {person.number}</p>)\r\n    )\r\n  }\r\n  return (\r\n    persons.map(person => { \r\n      if(person.name.toLowerCase().includes(keyword)) {\r\n        return(\r\n          <p key={person.name}>{person.name} {person.number}</p>\r\n          )\r\n      }\r\n    }\r\n    ))\r\n}*/\r\n\r\nconst PersonForm = ({newName, newNumber, addPerson, nameChangeHandler, numberChangeHandler}) => {\r\n       \r\n    return (\r\n        <div>\r\n        <form>\r\n            <div>\r\n            name: <input value={newName} onChange={nameChangeHandler}/>\r\n            </div>\r\n            <div>number: <input value={newNumber} onChange={numberChangeHandler}/></div>\r\n            <div>\r\n            <button onClick={addPerson} type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n    /*const [ newName, setNewName ] = useState('')\r\n    const [ newNumber, setNewNumber ] = useState('')\r\n\r\n    const nameChangeHandler = (event) => {\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const numberChangeHandler = (event) => {\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        let names = persons.map(person => person.name)\r\n        if(names.includes(newName)){\r\n            update(newName, newNumber);\r\n            // if (window.confirm(`${newName} is already added to the phonebook, would you like to update the number?`)) {\r\n            //     const name = persons.find(n => n.name === newName)\r\n            //     console.log(name.number)\r\n                \r\n            //     const personObject = {\r\n            //         ...name, number: newNumber\r\n            //     }\r\n            //     peopleService\r\n            //         .update(name.id, personObject)\r\n            //         .then(response => {\r\n            //             setPersons(persons.map(n => n.id !== name.id ? response.data : n))\r\n            //         })\r\n            // }\r\n        //alert(`${newName} is already added to the phonebook`)\r\n        } else {\r\n        const personObject = {\r\n            name: newName,\r\n            number: newNumber\r\n        }\r\n        peopleService\r\n            .create(personObject)\r\n            .then(returnedPeople => {\r\n                setPersons(persons.concat(returnedPeople))\r\n                setNewName('')\r\n        setNewNumber('')\r\n            })\r\n        }\r\n    }*/\r\n\r\n","  \r\nimport React from 'react'\r\n\r\nconst Persons = ({persons, keyword, del}) => {\r\n\r\n    const keywordFilter = persons.filter(person => person.name.toLowerCase().includes(keyword.toLowerCase()))\r\n\r\n    const filterApplied = keywordFilter.map(person => \r\n        <div key={person.name}>\r\n            {person.name} {person.number}  \r\n            <button onClick={() => {\r\n                if(window.confirm(`Delete ${person.name}?`)) {\r\n                    del(person.id)\r\n                }\r\n            }\r\n            \r\n            }>\r\n                delete\r\n            </button>\r\n        </div>\r\n        )\r\n    const noFilter = persons.map(person => \r\n        <div key={person.name}>\r\n            {person.name} {person.number}  \r\n            <button onClick={() => {\r\n                if(window.confirm(`Delete ${person.name}?`)) {\r\n                    del(person.id)\r\n                }\r\n            }\r\n            \r\n            }>\r\n                delete\r\n            </button>\r\n        </div>\r\n        )\r\n    \r\n    return (\r\n        \r\n        <div>\r\n            {keyword.length === 0 ? noFilter : filterApplied}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Persons;","import React, { useState } from 'react'\r\n\r\nconst Filter = ({searchWord, searchChangeHandler}) => {\r\n    return(\r\n    <div>\r\n        <form>\r\n            <div>\r\n            filter shown with <input value={searchWord} onChange={searchChangeHandler}/>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    )\r\n  }\r\n\r\n  export default Filter","import React from 'react'\r\n\r\nconst Message = ({ message, messageType }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n    if (messageType === 'error') {\r\n        return (\r\n            <div className=\"error\">\r\n            {message}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\">\r\n        {message}\r\n        </div>\r\n    ) \r\n}\r\nexport default Message","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3002/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, deletePerson }","import React, { useEffect, useState } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport Message from './components/Message'\nimport peopleService from './services/people'\n\nconst App = () => {\n  const [ searchWord, setSearchWord ] = useState('');\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNumber, setNewNumber ] = useState('');\n  const [ message, setMessage ] = useState(null);\n  const [ messageType, setMessageType ] = useState('ok');\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }, [])\n\n  const nameChangeHandler = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const numberChangeHandler = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const searchChangeHandler = (event) => {\n    setSearchWord(event.target.value.toLowerCase())\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    \n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    let names = persons.map(person => person.name)\n\n    if(names.includes(newName)) {\n      const name = persons.find(n => n.name === newName)\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with the new one ?`)) {\n        peopleService.update(name.id, nameObject)\n          .then(response => {\n            setPersons(persons.map(p => p.id === name.id ? response : p))\n            setMessage(`${newName}'s telephone number has been updated`)\n\n            setNewName('')\n            setNewNumber('')\n          \n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n          })\n          .catch(() => {\n            setMessage(`Information on ${newName} has already been removed from the server`)\n            setMessageType('error')\n            setTimeout(() => {\n              setMessage(null)\n              setMessageType('ok')\n            }, 5000)\n          })\n      }\n    } else {\n      peopleService.create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setMessage(`${newName} has been added to the phonebook`)\n          \n          setNewName('')\n          setNewNumber('')\n        \n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n      }\n  }\n\n  const del = (id) => {\n    let person = persons.find(p => p.id ===id)\n    peopleService\n        .deletePerson(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          setMessage(`${person.name} has been deleted from the phonebook`)\n          \n          setNewName('')\n          setNewNumber('')\n        \n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(() => {\n          setMessage(`Information on ${newName} has already been removed from the server`)\n          setMessageType('error')\n          setTimeout(() => {\n            setMessage(null)\n            setMessageType('ok')\n          }, 5000)\n        })\n  }\n\n  return (\n    <div>\n      <Message message={message} messageType={messageType}/>\n      <h2>Phonebook</h2>\n      <Filter searchWord={searchWord} searchChangeHandler={searchChangeHandler}/>\n\n      <h2>Add a new person</h2>\n      <PersonForm  \n        newName={newName} \n        newNumber={newNumber} \n        addPerson={addPerson} \n        nameChangeHandler={nameChangeHandler} \n        numberChangeHandler={numberChangeHandler}/>\n      \n      <h2>Numbers</h2>\n      <Persons persons={persons} keyword={searchWord} del={del} />\n\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}